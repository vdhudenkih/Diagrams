REPORT z_lemma_combinations.

TYPES: BEGIN OF ty_lemma,
         position_id TYPE numc3,
         order       TYPE i,
         lemma_id    TYPE char8,
       END OF ty_lemma.

DATA: lt_lemmas_per_order TYPE TABLE OF ty_lemma,
      ls_lemma           TYPE ty_lemma.

" Пример заполнения данных (можно заменить на загрузку из базы)
lt_lemmas_per_order = VALUE #( 
  ( position_id = '001' order = 0 lemma_id = '9'  )
  ( position_id = '002' order = 0 lemma_id = '18' )
  ( position_id = '003' order = 0 lemma_id = '21' )
  ( position_id = '004' order = 1 lemma_id = '14' )
  ( position_id = '005' order = 1 lemma_id = '16' )
  ( position_id = '006' order = 2 lemma_id = '34' )
).

" --- Шаг 1: Определяем уникальные ORDER и группируем записи по ORDER ---

TYPES: ty_lemmas_by_order TYPE STANDARD TABLE OF ty_lemma WITH EMPTY KEY,
       ty_order_group TYPE HASHED TABLE OF ty_lemmas_by_order WITH UNIQUE KEY table_line.

DATA: lt_orders TYPE SORTED TABLE OF i WITH UNIQUE KEY table_line,
      lt_groups TYPE TABLE OF ty_lemmas_by_order,
      lt_grouped TYPE TABLE OF ty_lemmas_by_order.

" Получаем уникальные ORDER
LOOP AT lt_lemmas_per_order INTO ls_lemma.
  INSERT ls_lemma-order INTO TABLE lt_orders.
ENDLOOP.

SORT lt_orders.

" Создаем внутреннюю таблицу для каждой группы ORDER
TYPES: ty_group TYPE STANDARD TABLE OF ty_lemma WITH EMPTY KEY,
       ty_groups TYPE STANDARD TABLE OF ty_group WITH EMPTY KEY.

DATA: lt_groups_by_order TYPE TABLE OF ty_group,
      ls_group TYPE ty_group,
      lv_order TYPE i.

" Заполняем группы по ORDER
LOOP AT lt_orders INTO lv_order.
  CLEAR ls_group.
  LOOP AT lt_lemmas_per_order INTO ls_lemma WHERE order = lv_order.
    APPEND ls_lemma TO ls_group.
  ENDLOOP.
  APPEND ls_group TO lt_groups_by_order.
ENDLOOP.

" --- Шаг 2: Рекурсивно формируем все комбинации по группам ---

TYPES: ty_combination TYPE STANDARD TABLE OF ty_lemma WITH EMPTY KEY.

DATA: lt_result TYPE TABLE OF ty_combination,
      lt_current_combination TYPE ty_combination.

" Рекурсивная форма для построения комбинаций
FORM combine USING iv_index TYPE i
                   it_groups TYPE ty_groups
                   it_combination TYPE ty_combination
                   rt_result TYPE TABLE OF ty_combination.

  DATA: lt_current_group TYPE ty_group,
        ls_lemma TYPE ty_lemma,
        lt_new_combination TYPE ty_combination,
        lv_group_count TYPE i.

  lv_group_count = lines( it_groups ).

  " Если дошли до конца групп, добавляем комбинацию в результат
  IF iv_index > lv_group_count.
    APPEND LINES OF it_combination TO rt_result.
    RETURN.
  ENDIF.

  " Получаем текущую группу
  READ TABLE it_groups INDEX iv_index INTO lt_current_group.
  IF sy-subrc <> 0.
    RETURN.
  ENDIF.

  " Перебираем все записи в текущей группе
  LOOP AT lt_current_group INTO ls_lemma.
    lt_new_combination = it_combination.
    APPEND ls_lemma TO lt_new_combination.
    PERFORM combine USING iv_index + 1 it_groups lt_new_combination rt_result.
  ENDLOOP.

ENDFORM.

" --- Основной блок программы ---

START-OF-SELECTION.

  " Вызов рекурсивной функции
  PERFORM combine USING 1 lt_groups_by_order lt_current_combination lt_result.

  " Вывод результатов
  DATA(lv_count) = lines( lt_result ).
  WRITE: / 'Total combinations:', lv_count.

  LOOP AT lt_result INTO DATA(ls_combination).
    WRITE / 'Combination:'.
    LOOP AT ls_combination INTO ls_lemma.
      WRITE: / ls_lemma-position_id, ls_lemma-order, ls_lemma-lemma_id.
    ENDLOOP.
    WRITE / '-----------------------------'.
  ENDLOOP.




напиши программу на ABAP по следующему условию:
есть таблица LT_ LEMMAS_PER_ORDER с полями:
POSITION_ID	Идентификатор позиции	-	NUMC	3	Первичный ключ. Счетчик
ORDER	Порядок слова в записи	-	INTEGER	2	-
LEMMA_ID	Id-индекс леммы	-	CHAR	8	-
Типичные записи в таблице будут:
1 0 "9"
2 0 "18"
3 0 "21"
4 1 "14"
5 1 "16"
6 2 "34"
Напиши программу, которая будет комбинировать эти записи всеми возможными способами, НО комбинация состоит только из уникальных ORDER, идущих по возрастанию. Также важно, чтобы ВСЕ существующие и уникальные ORDER учавствовали в комбинации.
Одной из комбинаций для данного примера будет:
1 0 "9"
4 1 "14"
6 2 "34"
