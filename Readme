Напиши код по примеру и алгоритму:
пример:
Разбить строку ввода S_ZZMR в таблицу LT_POSITIONS по пробелу.
Создать переменную LV_COUNT(INTEGER, 2) = <количество записей в таблице LT_POSITIONS>.
Создать переменную LV_END_STORAGE_COUNT(INTEGER, 2)= <количество записей LT_POSITIONS-WORKSHOP имеющих длину в три символа>.
Создать переменную LV_WORKSHOP_18_FLAG(INTEGER, 1) = 0.
Создать переменную LV_PURCHASING_ORGS_FLAG(CHAR, 3) = 0.
Создать переменную LV_WORKSHOP_18_ID(NUMC, 10)=0.
Создать переменную LV_WORKSHOP_PRENULTIMATE(CHAR, 3) = 0.
Создать переменную LV_WORKSHOP_LAST(CHAR, 3) = 0.
Создать переменную LV_PURCHASING_ORGS_COUNT(INTEGER, 2) = <количество записей LT_POSITIONS-WORKSHOP, равных 79, 95, 76, 179, 195>.
Если LV_PURCHASING_ORGS_COUNT>1:
•	Вывести сообщение об ошибке: «В маршруте может быть не более одной закупочной организации»
Найти запись в таблице LT_POSITIONS по условию:
•	LT_POSITIONS- POSITION_ID = LV_COUNT
Сохранить значение последнего цеха в переменной:
•	LV_WORKSHOP_ LAST = LT_POSITION-WORKSHOP

Выбрать из LT_POSITIONS запись по условию:
•	LT_POSITIONS- WORKSHOP = “79” или
•	LT_POSITIONS- WORKSHOP = “95” или
•	LT_POSITIONS- WORKSHOP = “76” или
•	LT_POSITIONS- WORKSHOP = “179” или
•	LT_POSITIONS- WORKSHOP = “195” или
Если запись найдена:
•	Устанавливаем флаг наличия закупочных организаций в положение TRUE:
o	LV_PURCHASING_ORGS_FLAG =”1”
•	Если LT_POSITIONS- POSITION_ID <> “1” и <> LV_COUNT:
o	Вывести сообщение об ошибке: «Закупочные организации могут стоять либо в начале маршрута, либо в конце»
Выбрать из LT_POSITIONS запись по условию:
•	LT_POSITIONS- WORKSHOP = “18”
Если запись найдена:
Устанавливаем флаг наличия 18 цеха в положение TRUE:
•	LV_WORKSHOP_18_FLAG=1
Если запись не найдена:
•	Если LV_END_STORAGE_COUNT>1:
o	Вывести сообщение об ошибке «Наличие более чем одного конечного склада может быть только в случае наличия 18 цеха»
Если LV_WORKSHOP_18_FLAG=1 и (LV_WORKSHOP_ LAST =”195” или LV_WORKSHOP_ LAST =”179”):
•	Вывести сообщение об ошибке: «Наличие закупочных организаций в конце и 18 цеха в одном маршруте недопустимо»
Сохраним индекс 18 цеха в переменной:
•	LV_WORKSHOP_18_ID = LT_POSITIONS- POSITION_ID
Найти запись в таблице LT_POSITIONS:
•	LT_POSITIONS- POSITION_ID = LV_COUNT-1
Сохраним значение предпоследнего цеха:
•	LV_WORKSHOP_PRENULTIMATE= LT_POSITIONS-WORKSHOP
Если LV_COUNT<2 или LV_COUNT>10+ LV_WORKSHOP_18_FLAG:
•	Вывести сообщение об ошибке «Некорректный ввод: число записей не может быть меньше двух или больше десяти»
Для записей у которых LT_POSITIONS-POSITION_ID<=LV_COUNT –(LV_WORKSHOP_18_FLAG+ LV_END_STORAGE_COUNT):
{
•	Найти в T024D запись:
o	T024D -DISPO = LT_POSITIONS-WORKSHOP
•	Если запись не найдена:
o	Вывести сообщение об ошибке «Цех <LT_POSITIONS-WORKSHOP> не существует»
}

Создать переменную LV_WORKSHOP_2_PREVIOUS(CHAR, 3) = 0.
Если LV_WORKSHOP_18_ID<>LV_COUNT–(LV_WORKSHOP_18_FLAG+ LV_END_STORAGE_COUNT)+1
То:
•	Вывести ошибку: «18 цех может стоять только на позиции перед конечными цехами»
Иначе:
•	Найти запись в таблице LT_POSITIONS по условию:
o	LT_POSITIONS- POSITION_ID = LV_COUNT -(LV_WORKSHOP_18_FLAG+ LV_END_STORAGE_COUNT)
•	Сохранить значение цеха перед 18 в переменной:
o	LV_WORKSHOP_2_PREVIOUS= LT_POSITION-WORKSHOP
•	Если LV_WORKSHOP_2_PREVIOUS = +1(2) LV_WORKSHOP_ LAST
и LV_END_STORAGE_COUNT=1:
o	Вывести ошибку: «Наличие 18 цеха не имеет смысла: он соединяет один и тот же цех»
Для записей в таблице LT_POSITIONS, у которых:
•	LT_POSITIONS- POSITION_ID>LV_COUNT - LV_END_STORAGE_COUNT
Выполнить:
•	Если +(1) LT_POSITION-WORKSHOP <>”1”:
o	Вывести сообщение об ошибке: «Цех <LT_POSITIONS-WORKSHOP> должен начинаться с 1»
•	Если LT_POSITION-WORKSHOP = “176”:
o	Вывести ошибку «Не существует конечного склада <”00”+1(2) LT_POSITION-WORKSHOP>»
•	Если LT_POSITION-WORKSHOP <>”179” или <>”195”:
o	Найти в T001L запись:
	T001L-LGPRO=+1(2) LT_POSITION-WORKSHOP +”20”
o	Если запись не найдена:
	Вывести ошибку «Не существует конечного склада <+1(2) LT_POSITION-WORKSHOP +”20”>»

Создать переменную LV_WORKSHOP(CHAR, 3) = 0.
Создать переменную LV_NRMARSH(NUMC, 2)=0.
Создать переменную LV_WORKSHOP_NEXT(CHAR, 3) = 0.
Создать переменную LV_INCREMENT (INTEGER, 2) = 1.


Если LV_WORKSHOP_18_FLAG =0
То:
{
•	Если LV_WORKSHOP_PRENULTIMATE <> +1(2)LV_WORKSHOP_ LAST и LV_WORKSHOP_ LAST<>”179” и <>”195”:
o	Вывести сообщение об ошибке «Невозможный маршрут: предпоследний и последний цеха должны совпадать, иначе предпоследним ставится цех 18»
Выполнять пока LV_INCREMENT<LV_COUNT
{
Если LV_INCREMENT<= LV_COUNT -2:
{
Выбрать запись в таблице LT_POSITIONS по условию:
•	LT_POSITIONS-POSITION_ID=LV_INCREMENT 
Сохранить значение текущего цеха в переменной:
•	LV_WORKSHOP = LT_POSITIONS-WORKSHOP
Выбрать запись в таблице LT_POSITIONS по условию:
•	LT_POSITIONS-POSITION_ID=LV_INCREMENT+1
Сохранить значение следующего цеха в переменной
•	LV_WORKSHOP_NEXT = LT_POSITIONS-WORKSHOP
o	Если LV_WORKSHOP= LV_WORKSHOP_NEXT:
	Вывести сообщение об ошибке «В маршруте не может быть два одинаковых цеха подряд <LT_POSITIONS-WORKSHOP>»
o	Иначе:
	Если LV_WORKSHOP<>”95” И <>”79” И <>”76”:
•	Добавить в LT_RESULT запись:
o	LT_RESULT- NRMARSH = LV_INCREMENT *10
o	LT_RESULT-LGPRO = LV_WORKSHOP_NEXT +”20”
o	LT_RESULT-DISPO = LV_WORKSHOP
Увеличить счётчик LV_INCREMENT на 1. 
}
Иначе:
•	Найти в таблице LT_POSITIONS запись:
•	LT_POSITIONS-POSITION_ID=LV_INCREMENT 
•	Если LV_WORKSHOP_LAST=”195” или =”179”:
o	Добавить в LT_RESULT запись:
	LT_RESULT- NRMARSH = 00
	LT_RESULT-LGPRO = “00”+1(2)LT_POSITIONS-WORKSHOP
	LT_RESULT-DISPO = LT_POSITIONS-WORKSHOP
•	Иначе:
o	Добавить в LT_RESULT запись:
	LT_RESULT- NRMARSH = 00
	LT_RESULT-LGPRO = +1(2)LT_POSITIONS-WORKSHOP+”20”
	LT_RESULT-DISPO = LT_POSITIONS-WORKSHOP
}
}
Иначе:
{
Выполнить LV_COUNT-(LV_WORKSHOP_18_FLAG+ LV_END_STORAGE_COUNT) раз:
{
Выбрать запись в таблице LT_POSITIONS по условию:
•	LT_POSITIONS-POSITION_ID=LV_INCREMENT +1
Сохранить значение следующего цеха в переменной
•	LV_WORKSHOP_NEXT= LT_POSITIONS-WORKSHOP
Выбрать запись в таблице LT_POSITIONS по условию:
•	LT_POSITIONS-POSITION_ID=LV_INCREMENT 
Сохранить значение текущего цеха в переменной
•	LV_WORKSHOP = LT_POSITIONS-WORKSHOP
Если LV_WORKSHOP= LV_WORKSHOP_NEXT:
•	Вывести сообщение об ошибке «В маршруте не может быть два одинаковых цеха <LT_POSITIONS-WORKSHOP> подряд»
Иначе:
•	Если LV_WORKSHOP_NEXT=”18”:
o	Добавить в LT_RESULT запись:
o	LT_RESULT- NRMARSH = 00
o	LT_RESULT-DISPO = LV_WORKSHOP
•	Иначе:
o	Добавить в LT_RESULT запись:
	LT_RESULT- NRMARSH = LV_INCREMENT *10
	LT_RESULT-DISPO = LV_WORKSHOP
	LT_RESULT-LGPRO=LV_WORKSHOP_NEXT+”20”
Увеличить счётчик LV_INCREMENT на 1.
}
•	Найти в LT_POSITIONS запись, где
•	LT_POSITIONS-WORKSHOP= “142” или =”117”
•	Если запись не найдена:
o	Найти в LT_POSITIONS запись, где:
o	LT_POSITIONS-WORKSHOP= “143” или =”113” или =”121”
o	Если запись не найдена:
	Найти в LT_POSITIONS запись, где:
	LT_POSITIONS-WORKSHOP= “129” или =”125”
	Если запись не найдена:
•	Найти в LT_POSITIONS запись, где:
•	LT_POSITIONS-POSITION_ID=LV_INCREMENT+2
•	Если LT_POSITIONS-WORKSHOP =”142” или =”143”:
o	Найти в LT_RESULT запись, где:
	LT_RESULT-NRMATSH=00
o	Изменить запись:
	LT_RESULT-LGPRO = “18”+1(2) LT_POSITIONS-WORKSHOP
•	Иначе:
o	Найти в LT_RESULT запись, где:
	LT_RESULT-NRMATSH=00
o	Изменить запись:
	LT_RESULT-LGPRO = +1(2) LT_POSITIONS-WORKSHOP +”20”
}
Вывести пользователю на экран таблицу LT_RESULT
;
Вместо массивов и списков существуют только таблицы
Алгоритм действий:
на вход подаётся таблица LT_ LEMMAS_PER_ORDER «Количество уникальных лемм на порядковый номер»
Со следующей структурой
№ п/п	Поле	Краткое описание	Элемент данных	Тип данных	Длина	Комментарий
1	POSITION_ID	Идентификатор позиции	-	NUMC	3	Первичный ключ. Счетчик
2	ORDER	Порядок слова в записи	-	INTEGER	2	-
3	LEMMA_ID	Id-индекс леммы	-	CHAR	8	-
Типичным содержанием будет:
1 0 31
2 0 45
3 1 13
4 2 11
5 2 92
Необходим алгоритм, выводящий все возможные варианты расположений этих записей, НО по возрастающему ORDER И в полученной комбинации каждый ORDER может встречаться только один раз
